version: 2.1
orbs:
  aws-s3: circleci/aws-s3@3.0.0
jobs:
  build:
    docker:
      - image: cimg/ruby:3.1.2
        environment:
          BUNDLER_VERSION: 2.3.7
          RAILS_ENV: test
          TZ: Asia/Tokyo
      - image: cimg/mysql:8.0.28
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_ROOT_HOST: '%'
          TZ: Asia/Tokyo

    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-deps-{{ checksum "api/Gemfile.lock" }}
            - v1-deps-

      - run:
          name: Install dependencies
          working_directory: api
          command: |
            gem install bundler -v 2.3.7
            bundle check || bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
            - api/vendor/bundle
          key: v1-deps-{{ checksum "api/Gemfile.lock" }}

      - run:
          name: Wait for db
          command: dockerize -wait tcp://localhost:3306 -timeout 1m

      - run:
          name: Database set up
          working_directory: api
          command: |
            mv config/database.ci.yml config/database.yml
            bundle exec rake db:create
            bundle exec rake db:schema:load

      - run:
          name: Rubocop
          working_directory: api
          command: bundle exec rubocop
          when: always

      - run:
          name: Run tests
          working_directory: api
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
              circleci tests split --split-by=timings)"
            bundle exec rspec \
              --format progress \
              --out /tmp/test-results/rspec.xml \
              --format progress \
              $TEST_FILES

      - store_test_results:
          path: test/reports

      - aws-s3/copy:
          arguments: --recursive
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-region: AWS_REGION
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          from: ../frontend/build
          to: 's3://rkscz-bucket/'
