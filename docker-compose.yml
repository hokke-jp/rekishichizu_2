version: '3.9'

services:
  db:
    build: ./mysql
    container_name: db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
      TZ: Asia/Tokyo
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      # - mysql-data:/var/lib/mysql
      - type: volume
        source: mysql-data
        target: /var/lib/mysql
      # - /tmp/dockerdir:/etc/mysql/conf.d/
      - type: bind
        source: /tmp/dockerdir
        target: /etc/mysql/conf.d/
      # - ./mysql/mysql_init.sql:/docker-entrypoint-initdb.d
      - type: bind
        source: ./mysql/init
        target: /docker-entrypoint-initdb.d
    ports:
      - 3306:3306

  api:
    build:
      context: ./api/
    container_name: api
    environment:
      RAILS_ENV: development
    command: bash -c "rm -f /api/tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    # command: /bin/sh -c "rm -f tmp/pids/server.pid && bundle install --path=vendor/bundle && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      # - ./api:/api
      - type: bind
        source: ./api
        target: /api
      # - /usr/local/bundle
      - type: volume
        source: gem-data
        target: /usr/local/bundle
    ports:
      - 3001:3000
    depends_on:
      - db
    tty: true
    stdin_open: true

  front:
    build:
      context: ./frontend/
    container_name: front
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WDS_SOCKET_PORT=0
      - CI=true
    command: sh -c "yarn && yarn start"
    volumes:
      # - ./frontend:/frontend
      - type: bind
        source: ./frontend
        target: /frontend
      # - /frontend/node_modules
      - type: volume
        source: node-data
        target: /frontend/node_modules
    ports:
      - 3000:3000
    tty: true
    stdin_open: true

volumes:
  mysql-data:
  gem-data:
  node-data:
